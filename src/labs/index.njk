---
title: Labs
layout: layouts/base.njk
pagination:
    data: collections.visibleLabs
    size: 4
    reverse: true
permalink: "{% if pagination.pageNumber == 0 %}/labs/index.html{% elif pagination.pageNumber > 0 %}labs/page-{{ pagination.pageNumber + 1 }}/index.html{% endif %}"

---

{# If changing this, remember to update the CSP hash for it, hashing seemed better in this case over putting into another file... #}
<script type="text/javascript">
    function searchShouldBeVisible(visible) {
        document.getElementById('search-results-container').classList.remove(visible ? 'invisible' : 'visible')
        document.getElementById('search-results-container').classList.add(visible ? 'visible' : 'invisible')
    }

    window.addEventListener('DOMContentLoaded', (_) => {
        document.getElementById('post-search').addEventListener('keyup', event => search(event.target.value))
    });

    const search = debounce(async (term) => {
        if (!term) {
            searchShouldBeVisible(false)
            return
        }

        addOnClickOutsideListener(document.getElementById('search-results-container'), _ => {
            searchShouldBeVisible(false)
        })

        searchShouldBeVisible(true)

        const feedResponse = await fetch('/labs/feed.json')
        const feed = await feedResponse.json()

        const filtered = feed.items.filter(item => `${item.title}${item.synopsis}`.toLowerCase().includes(term.toLowerCase()))

        const resultsDiv = document.getElementById("search-results")

        if (filtered.length === 0) {
            resultsDiv.innerHTML = 'Nothing found...'
            return
        }

        let compiledString = ''

        for (let i = 0; i < filtered.length; i++) {
            const post = filtered[i]
            const card = `<div class="cursor-pointer" onclick="window.location = '${post.path}';"><a class="font-bold mb-0" href="${post.path}">${post.title}</a><p class="mb-0">${post.synopsis}</p></div>`
            compiledString = `${compiledString}${card}`

            if (i !== filtered.length - 1) {
                compiledString = `${compiledString}<span class="divider mt-0.5 mb-0.5"></span>`
            }
        }

        resultsDiv.innerHTML = compiledString
    })
</script>
<div class="lg:mx-24 xl:mx-48 2xl:mx-64 p-6 md:px-12 min-h-screen">
    <div class="md:flex">
        <div class="md:flex-1 px-4 pt-2">
            <p>
                <i class="ri-lightbulb-line"></i> These are labs, they are not full posts and are more akin to a Github gist. The idea is to share thoughts and snippets of code, that might not be quite as refined.
            </p>
        </div>
        <div class="flex-1 md:flex-none">
            <div class="form-control w-full md:max-w-xs">
                <label class="label" for="post-search">
                    <span class="label-text">Search Labs:</span>
                </label>
                <input id="post-search" autocomplete="off" type="search" placeholder="Type here" class="input input-bordered w-full md:max-w-xs" />
            </div>
            <div id="search-results-container" class="card shadow-xl absolute bg-base-100 border-gray-600 border-solid border-2 translate-y-2 left-0 ml-[3%] w-[94%] z-50 md:left-auto md:w-96 md:ml-[2%] md:-translate-x-1/2 lg:-translate-x-1/4 invisible">
                <div id="search-results" class="card-body p-4 text-sm max-h-96 overflow-y-scroll"></div>
            </div>
        </div>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    {% for lab in (pagination.items | reverse) | shouldDisplayItem | reverse %}
        <div class="card md:card-side bg-base-100 shadow-xl my-2">
            <div class="card-body">
                <h2 class="card-title">
                    <a href="{{ lab.url | url }}" class="text-secondary">{{ lab.data.title }}</a>
                </h2>
                <p>{{ lab.data.synopsis }}</p>
                <div class="card-actions justify-end">
                    <a href="{{ lab.url | url }}">
                        <button class="btn btn-neutral">Read it!</button>
                    </a>
                </div>
            </div>
        </div>
    {% endfor %}
    </div>
    <div class="flex">
        <div class="flex-1"></div>
        <div class="join">
            {% if pagination.href.previous %}
                <a href="{{ pagination.href.previous }}">
                    <button class="join-item btn">«</button>
                </a>
            {% else %}
                <button class="join-item btn btn-disabled">«</button>
            {% endif %}
            <button class="join-item btn">{{ pagination.pageNumber + 1 }}</button>
            {% if pagination.href.next %}
                <a href="{{ pagination.href.next }}">
                    <button class="join-item btn">»</button>
                </a>
            {% else %}
                <button class="join-item btn btn-disabled">»</button>
            {% endif %}

        </div>
    </div>
</div>